@page "/categorias/adicionar"

<MudText Typo="Typo.h3">Nova Categoria</MudText>

<MudPaper Class="pa-8 mt-4">
    <EditForm Model="@InputModel" OnValidSubmit="OnValidSubmitAsync">
        <DataAnnotationsValidator />

        <MudTextField Label="Título"
                      HelperText="Campo obrigatório"
                      @bind-Value="InputModel.Title"
                      For="@(() => InputModel.Title)" />

        <MudTextField Label="Descrição"
                      Lines="5"
                      HelperText="Campo obrigatório"
                      @bind-Value="InputModel.Description"
                      For="@(() => InputModel.Description)" />

        @if (IsBusy)
        {
            <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
        }
        else
        {
            <MudButton ButtonType="ButtonType.Submit"
                       Variant="Variant.Filled"
                       Color="Color.Primary">
                Salvar
            </MudButton>
        }
    </EditForm>
</MudPaper>

@code {


    public bool IsBusy { get; set; } = false;
    public CreateCategoryRequest InputModel { get; set; } = new();


    [Inject]
    public ICategoryHandler Handler { get; set; } = null!;

    [Inject]
    public NavigationManager NavigationManager { get; set; } = null!;

    [Inject]
    public ISnackbar Snackbar { get; set; } = null!;

    public async Task OnValidSubmitAsync()
    {
        IsBusy = true;

        try
        {
            var result = await Handler.CreateCategoryHandlerAsync(InputModel);
            if (result.IsSuccess)
            {
                Snackbar.Add(result.Message, Severity.Success);
                NavigationManager.NavigateTo("/categorias");
            }
            else
                Snackbar.Add(result.Message, Severity.Error);
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
        finally
        {
            IsBusy = false;
        }
    }
}